@model ProjectTrackingSystem.Models.CreateTaskModels

@{
    ViewBag.Title = "CreateTask";
}

<h2>CreateTask</h2>


@using (Html.BeginForm(null, null, FormMethod.Post))
{
    @Html.AntiForgeryToken()


    <h4>Task</h4>
    <hr />
    <div class="container-fluid">
        <div class="col-lg-6 form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-6 form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Project, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <span class="control-label col-md-2">@Html.DisplayFor(model => model.Project.projectName)</span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DevAssigneeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DevAssigneeId, Model.Users, "", htmlAttributes: new { @class = "form-control" })
                    @Html.Hidden("DevAssigneeChosenId", Model.DevAssigneeId)
                    @Html.ValidationMessageFor(model => model.DevAssigneeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.POAssigneeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.POAssigneeId, Model.Users, "", htmlAttributes: new { @class = "form-control" })
                    @Html.Hidden("DevAssigneeChosenId", Model.POAssigneeId)
                    @Html.ValidationMessageFor(model => model.POAssigneeId, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.ProjectId)

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @*<script type="text/javascript">
        $(document).ready(function () {
            $("#SelectedId").change(function (evt) {
                $("#DevAssigneeChosenId").val($("#SelectedId option:selected").text().trim());
            });
        });*@
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
