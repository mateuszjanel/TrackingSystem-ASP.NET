@model ProjectTrackingSystem.Models.TaskDetailsModels
@{
    ViewBag.Title = "TaskDetails";
}

@Styles.Render("~/Content/General.css")

<h2>@Html.DisplayFor(model => model.Name)</h2>

<hr />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-lg-8 form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>


        </div>

        <div class="col-lg-4 site-userbox form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <span class="displayfor-site-userbox control-label col-md-2">@Html.DisplayFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })</span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReporterName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <span class="displayfor-site-userbox col-md-8">@Html.DisplayFor(model => model.ReporterName, new { htmlAttributes = new { @class = "form-control" } })</span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DevAssigneeId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.DevAssigneeId, Model.Users, htmlAttributes: new { @class = "form-control" })
                    @Html.Hidden("DevAssigneeChosenId", Model.DevAssigneeId)
                    @Html.ValidationMessageFor(model => model.DevAssigneeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.POAssigneeId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.POAssigneeId, Model.Users, htmlAttributes: new { @class = "form-control" })
                    @Html.Hidden("POAssigneeChosenId", Model.POAssigneeId)
                    @Html.ValidationMessageFor(model => model.POAssigneeId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}

<div class="panel-group">
    @{Html.RenderAction("_CreateComment", "Comments", new { taskId = Model.ID });}
</div>

<div class="panel-group">
    @{ Html.RenderAction("_CreateWorklog", "Comments", new { taskId = Model.ID });}
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}